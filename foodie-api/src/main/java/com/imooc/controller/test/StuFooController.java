package com.imooc.controller.test;import com.imooc.pojo.Stu;import com.imooc.service.IStuService;import lombok.extern.slf4j.Slf4j;import org.springframework.transaction.annotation.Propagation;import org.springframework.transaction.annotation.Transactional;import org.springframework.web.bind.annotation.*;import springfox.documentation.annotations.ApiIgnore;import javax.annotation.Resource;@ApiIgnore // 忽略该类在 Swagger 中显示@Slf4j@RestControllerpublic class StuFooController {    @Resource    private IStuService stuService;    /* ***************************************************************************************     * 1. getStu 方法通过查询字符串接收参数，且参数名必须与方法参数名相同。     * 2. getStuByParam 方法也通过查询字符串接收参数，但可以使用 @RequestParam 注解来指定不同的参数名。     * 3. getStuByPath 方法通过路径变量接收参数，使得URL更加简洁，且参数名由路径中的变量指定。     * ***************************************************************************************/    /**     * <a href="http://localhost:8088/getStu?id=1001">access</a>     *     * @param id     * @return     */    @GetMapping("/getStu")    public Object getStu(int id) {        log.info("id of getStu：{}", id);        return stuService.getStu(id);    }    /**     * <a href="http://localhost:8088/getStuByParam?iddddd=1001">access</a>     *     * @param id     * @return     */    @GetMapping("/getStuByParam")    public Object getStuByParam(@RequestParam("iddddd") int id) {        log.info("id of getStuByParam: {}", id);        return stuService.getStu(id);    }    /**     * http://localhost:8088/getStuByPath/1001     *     * @param id     * @return     */    @GetMapping("/getStuByPath/{id}")    public Object getStuByPath(@PathVariable("id") int id) {        log.info("id of getStuByPath: {}", id);        return stuService.getStu(id);    }    @PostMapping("/saveStu")    public Object saveStu(Stu stu) {        stuService.saveStu(stu);        return SUCCESS;    }    @PostMapping("/updateStu")    public Object updateStu(Stu stu) {        stuService.updateStu(stu);        return SUCCESS;    }    @Transactional(propagation = Propagation.SUPPORTS)    @PostMapping("/delStu")    public Object delStu(int id) {        stuService.delStu(id);        return SUCCESS;    }    private final String SUCCESS = "{'result':'success'}";}